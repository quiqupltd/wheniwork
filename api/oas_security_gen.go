// Code generated by ogen, DO NOT EDIT.

package api

import (
	"context"
	"net/http"

	"github.com/go-faster/errors"
)

// SecuritySource is provider of security values (tokens, passwords, etc.).
type SecuritySource interface {
	// WToken provides W-Token security value.
	// Authentication with When I Work is based on a token model using [JSON Web Tokens](https://jwt.io/).
	//  First, you
	// authenticate using a private developer key and the username and password of a When I Work user.
	// Your developer key
	// can be used like the following in the headers.
	// ```
	// curl -X POST \\
	// https://api.login.wheniwork.com/login \\
	// -H 'W-Key: <INSERT_DEVELOPER_KEY_HERE>' \\
	// -H 'content-type: application/json' \\
	// -d '{\"email\":\"<INSERT_USERNAME_HERE>\",\"password\":\"<INSERT_PASSWORD_HERE>\"}'
	// ```
	// Authenticating returns back a person object containing a token that is used to authenticate all
	// future requests. You can now use this token to fetch all the users tied to your person. The token
	// may be included in the headers, as a cookie, or in the query string using the key ‘W-Token’ or
	// ‘Authorization’. If the authenticated user belongs to more than one Workplace you will need to
	// get the User listing to obtain the user-id value
	// ```
	// curl -X GET \\
	// 'https://api.wheniwork.com/2/login?show_pending=true' \\
	// -H 'Host: api.wheniwork.com' \\
	// -H 'Authorization: Bearer <INSERT_TOKEN_HERE>'
	// ```
	// The response will also include a listing of the user objects related to the person for each
	// associated When I Work account. You can use the user ID to set the context for which account you
	// will be acting upon by providing a When I Work user ID through the ‘W-UserID’ header.
	// ```
	// curl -X GET \\
	// https://api.wheniwork.com/2/users \\
	// -H 'Authorization: Bearer <INSERT TOKEN HERE>' \\
	// -H 'W-UserId: <INSERT_USER_ID_HERE>'
	// ```
	// When I Work protects our application and API with rate limiting thresholds. Rate limiting utilizes
	// thresholds based on rolling windows of time. Typical responses will be 403 level client side
	// errors when encountering these limits. If you suspect you are encountering one of our thresholds
	// please connect with our Customer Care team at support@wheniwork.com.
	// You can find additional authentication related API documentation in our [Login Service API
	// docs](https://apidocs.wheniwork.com/external/index.html?repo=login).
	WToken(ctx context.Context, operationName OperationName) (WToken, error)
}

func (s *Client) securityWToken(ctx context.Context, operationName OperationName, req *http.Request) error {
	t, err := s.sec.WToken(ctx, operationName)
	if err != nil {
		return errors.Wrap(err, "security source \"WToken\"")
	}
	req.Header.Set("Authorization", "Bearer "+t.Token)
	return nil
}
